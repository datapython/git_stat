###  1:  R with Hadoop  ###
### there is a library called RHadoop by Revolutionary Analytics  ###
###  http://www.lecturemaker.com/2011/02/rhipe/?doNavDotNow=14&lecID=1#video  ##

###  2: Run R job in linux serser  ###
###  R CMD BATCH rjob.R , then there will be generated .Rout file  ###

###  3: R usrful commands  ###
###   attributes(mydata)  names(mydata)  class(mydata)  scan, search(),  data()        load   attach     

###  3: R: do like SAS proc summary  ###
read.csv("D:/hsong/SkyDrive/Dropbox/sampledata.csv")->data1
data.frame(data1)->data1
attach(data1)
names(data1)   ### check column names of data frame in R
aggregate(clicks,list(report_date,category_id),mean)   
### calculate the mean of clicks on report_date and category_id
###  similar to SAS: class report_date category_id; var clicks;


###  4: Interface from R to SAS  ###
system("C:\\Programe Files\\SAS\\SAS Foundation\\9.2\\SAS.exe
        C:\\my_r_files\\test.sas"
      )
###  Suppose test.sas is lke:
     proc summary data=sashelp.class mean sum;
     	var height;
     	class sex;
     	output out=results;
     run;
     
     proc export data=results outfile="C:\tmp\results.csv" DBMS=csv replace;
     	putname=yes;
     run;
###  Import the data to R:
import_sas_data <- read.csv("C:\\tmp\results.csv", sep=",", header=T)


###  5: calculate the statistics in subset and merge together
library(stats)
aggregate(cbind(ncases, ncontrols) ~ alcgp + tobgp, data = esoph, sum)->data1
aggregate(cbind(ncases, ncontrols) ~ alcgp , data = esoph, sum)->data2
merge(data1, data2, by.x="alcgp", by.y="alcgp")


###  6: R: pass parameters value from command line
### vi rscript.R and input:
args <- commandArgs(TRUE)
x=as.numeric(args)
x
y=sin(x)
y
## Then go to the command line and run: Rscript rscript.R 1 2 3 4 5 6 7
# the output will be:
# [1] 1 2 3 4 5 6 7
# [1]  0.8414710  0.9092974  0.1411200 -0.7568025 -0.9589243 -0.2794155  0.6569866


###  R: sort(x)=x[order(x)]  ####


###  Calculate Frequency in R(function table) and SAS(proc freq)   ###
read.csv("sampledata.csv",header=T)->data1
attach(data1)
names(data1)
table(PUBLISHER_ID,category_id)
# then you can cite the output as a matrix #


###  7: R: how to draw several graphs on one phrah (overlap)  ###
after plot() draw the first one, use par(new=TRUE), then draw the second one
sometimes it is better to use the same axis notations like all plots add the limitations as plot(¡­¡­¡­¡­,xlim=c))


###  8:  logistic regression

read.csv("D:\\hsong\\Desktop\\qcs.csv")->qsc1

##  pick three columns we wanted
qsc=qsc1[,c("deals", "c_category_id", "payer_id")]

attach(qsc)

## change value in data.frame to factors
qsc$c_category_id<-as.factor(c_category_id)

qsc$payer_id<-as.factor(payer_id)

detach(qsc)

##  logistic regression and xs are factors
glm(deals~payer_id+c_category_id, family=binomial, data=qsc)

##  subset from data.frame by picl levels within factors
subset(qsc,payer_id %in% (550))->subset1













